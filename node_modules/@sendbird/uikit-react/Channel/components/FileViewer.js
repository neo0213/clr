import React__default from 'react';
import { createPortal } from 'react-dom';
import { A as Avatar } from '../../chunks/bundle-Tep20T57.js';
import { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-0IelBspE.js';
import Icon, { IconTypes, IconColors } from '../../ui/Icon.js';
import '../../hooks/useModal.js';
import { d as isSupportedFileView, e as isVideo, f as isImage } from '../../chunks/bundle-ZT6XnGSN.js';
import { useSendbirdStateContext } from '../../useSendbirdStateContext.js';
import { u as useChannelContext } from '../../chunks/bundle-QO9wq7-1.js';
import { a as MODAL_ROOT } from '../../chunks/bundle-5JvP07dI.js';
import '../../chunks/bundle-Y6TqPszM.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-8VA5hO1c.js';
import '../../chunks/bundle-2AUp3oeN.js';
import '../../chunks/bundle-JuKER7D_.js';
import '../../chunks/bundle-JhG5BHdE.js';
import '../../chunks/bundle-zz1eCYds.js';
import '../../chunks/bundle-Xly_X4hP.js';
import '../../chunks/bundle-xgxXEKxk.js';
import '../../chunks/bundle-Mn36ivpf.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../withSendbird.js';
import '../../chunks/bundle-3WQuaADd.js';
import '../../chunks/bundle-YQkYq090.js';
import '../../chunks/bundle-menQ38z9.js';
import '../../chunks/bundle-pmVgESW3.js';
import '@sendbird/chat/message';
import '../../chunks/bundle-GGcTNRCI.js';
import '../../chunks/bundle-EPtYsHAJ.js';
import '@sendbird/chat/groupChannel';
import '../hooks/useInitialMessagesFetch.js';
import '../../chunks/bundle-7x4clnC7.js';
import '../../chunks/bundle-Sk3SXXP7.js';
import '../../chunks/bundle-pCwi8C-K.js';
import '../../chunks/bundle-EteEacTX.js';

var FileViewerComponent = function (_a) {
    var 
    // sender
    profileUrl = _a.profileUrl, nickname = _a.nickname, 
    // file
    name = _a.name, type = _a.type, url = _a.url, 
    // others
    isByMe = _a.isByMe, onCancel = _a.onCancel, onDelete = _a.onDelete, disableDelete = _a.disableDelete;
    return (React__default.createElement("div", { className: "sendbird-fileviewer" },
        React__default.createElement("div", { className: "sendbird-fileviewer__header" },
            React__default.createElement("div", { className: "sendbird-fileviewer__header__left" },
                React__default.createElement("div", { className: "sendbird-fileviewer__header__left__avatar" },
                    React__default.createElement(Avatar, { height: "32px", width: "32px", src: profileUrl })),
                React__default.createElement(Label, { className: "sendbird-fileviewer__header__left__filename", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),
                React__default.createElement(Label, { className: "sendbird-fileviewer__header__left__sender-name", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)),
            React__default.createElement("div", { className: "sendbird-fileviewer__header__right" },
                isSupportedFileView(type) && (React__default.createElement("div", { className: "sendbird-fileviewer__header__right__actions" },
                    React__default.createElement("a", { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank" },
                        React__default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })),
                    onDelete && isByMe && (React__default.createElement("div", { className: "sendbird-fileviewer__header__right__actions__delete" },
                        React__default.createElement(Icon, { className: disableDelete ? 'disabled' : '', type: IconTypes.DELETE, fillColor: disableDelete ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function () { if (!disableDelete) {
                                onDelete();
                            } } }))))),
                React__default.createElement("div", { className: "sendbird-fileviewer__header__right__actions__close" },
                    React__default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: onCancel })))),
        React__default.createElement("div", { className: "sendbird-fileviewer__content" },
            isVideo(type) && (React__default.createElement("video", { controls: true, className: "sendbird-fileviewer__content__video" },
                React__default.createElement("source", { src: url, type: type }))),
            isImage(type) && (React__default.createElement("img", { src: url, alt: name, className: "sendbird-fileviewer__content__img" })),
            !isSupportedFileView(type) && (React__default.createElement("div", { className: "sendbird-fileviewer__content__unsupported" },
                React__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, "Unsupoprted message"))))));
};
var FileViewer = function (_a) {
    var _b, _c, _d;
    var onCancel = _a.onCancel, message = _a.message;
    var deleteMessage = useChannelContext().deleteMessage;
    var sender = message.sender, type = message.type, url = message.url, _e = message.name, name = _e === void 0 ? '' : _e, threadInfo = message.threadInfo;
    var user = (_c = (_b = useSendbirdStateContext()) === null || _b === void 0 ? void 0 : _b.config) === null || _c === void 0 ? void 0 : _c.userId;
    var isByMe = user === ((_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.userId);
    var disableDelete = (threadInfo === null || threadInfo === void 0 ? void 0 : threadInfo.replyCount) > 0;
    var profileUrl = sender.profileUrl, _f = sender.nickname, nickname = _f === void 0 ? '' : _f;
    return createPortal((React__default.createElement(FileViewerComponent, { profileUrl: profileUrl, nickname: nickname, type: type, url: url, name: name, onCancel: onCancel, onDelete: function () {
            deleteMessage(message).then(function () {
                onCancel();
            });
        }, isByMe: isByMe, disableDelete: disableDelete })), document.getElementById(MODAL_ROOT));
};

export { FileViewerComponent, FileViewer as default };
//# sourceMappingURL=FileViewer.js.map
