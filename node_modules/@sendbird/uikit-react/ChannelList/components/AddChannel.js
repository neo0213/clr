import React__default, { useState } from 'react';
import IconButton from '../../ui/IconButton.js';
import Icon, { IconTypes, IconColors } from '../../ui/Icon.js';
import CreateChannel from '../../CreateChannel.js';
import { useSendbirdStateContext } from '../../useSendbirdStateContext.js';
import { u as useChannelListContext } from '../../chunks/bundle-Xq25cpwP.js';
import '../../chunks/bundle-Y6TqPszM.js';
import '../../chunks/bundle-JhG5BHdE.js';
import '../../CreateChannel/components/CreateChannelUI.js';
import '../../chunks/bundle-s3qW-HFQ.js';
import '../../sendbirdSelectors.js';
import '../../chunks/bundle-7x4clnC7.js';
import '../../CreateChannel/components/InviteUsers.js';
import '../../chunks/bundle-Xly_X4hP.js';
import '../../chunks/bundle-JuKER7D_.js';
import '../../chunks/bundle-xgxXEKxk.js';
import '../../chunks/bundle-5JvP07dI.js';
import 'react-dom';
import '../../chunks/bundle-Mn36ivpf.js';
import '../../ui/Button.js';
import '../../chunks/bundle-0IelBspE.js';
import '../../ui/UserListItem.js';
import '../../chunks/bundle-3WQuaADd.js';
import '../../chunks/bundle-Tep20T57.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-8VA5hO1c.js';
import '../../chunks/bundle-2AUp3oeN.js';
import '../../ui/MutedAvatarOverlay.js';
import '../../ui/Checkbox.js';
import '../../ui/UserProfile.js';
import '../../ui/ContextMenu.js';
import '../../ui/SortByRow.js';
import '../../chunks/bundle-ZT6XnGSN.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-zz1eCYds.js';
import '../../CreateChannel/components/SelectChannelType.js';
import '../../withSendbird.js';
import '@sendbird/chat/groupChannel';
import '../../chunks/bundle-Sk3SXXP7.js';

var AddChannel = function () {
    var _a;
    var _b = useState(false), showModal = _b[0], setShowModal = _b[1];
    var state = useSendbirdStateContext();
    var isOnline = (_a = state === null || state === void 0 ? void 0 : state.config) === null || _a === void 0 ? void 0 : _a.isOnline;
    var disabled = !isOnline;
    var _c = useChannelListContext(), overrideInviteUser = _c.overrideInviteUser, onBeforeCreateChannel = _c.onBeforeCreateChannel;
    return (React__default.createElement(React__default.Fragment, null,
        React__default.createElement(IconButton, { height: "32px", width: "32px", onClick: function () {
                setShowModal(true);
            }, disabled: disabled },
            React__default.createElement(Icon, { type: IconTypes.CREATE, fillColor: IconColors.PRIMARY, width: "24px", height: "24px" })),
        showModal && (React__default.createElement(CreateChannel, { onCancel: function () {
                setShowModal(false);
            }, overrideInviteUser: overrideInviteUser, onCreateChannel: function () {
                setShowModal(false);
            }, onBeforeCreateChannel: onBeforeCreateChannel }))));
};

export { AddChannel, AddChannel as default };
//# sourceMappingURL=AddChannel.js.map
