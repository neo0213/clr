import React__default from 'react';
import OpenChannelUI from './OpenChannel/components/OpenChannelUI.js';
import { O as OpenChannelProvider } from './chunks/bundle-96I4BbNe.js';
import './OpenChannel/components/OpenChannelInput.js';
import './chunks/bundle-Xly_X4hP.js';
import './chunks/bundle-JuKER7D_.js';
import './chunks/bundle-xgxXEKxk.js';
import './ui/MessageInput.js';
import './chunks/bundle-Y6TqPszM.js';
import './chunks/bundle-Jw6D-oM_.js';
import './chunks/bundle-YQkYq090.js';
import './ui/IconButton.js';
import './ui/Button.js';
import './chunks/bundle-0IelBspE.js';
import './chunks/bundle-vSJ8dTAZ.js';
import 'dompurify';
import './chunks/bundle-2YEsND5T.js';
import './chunks/bundle-zCWUhqT2.js';
import './chunks/bundle-89OkQYTj.js';
import './ui/Icon.js';
import './chunks/bundle-JhG5BHdE.js';
import './useSendbirdStateContext.js';
import './withSendbird.js';
import './chunks/bundle-ZT6XnGSN.js';
import './utils/message/getOutgoingMessageState.js';
import './chunks/bundle-zz1eCYds.js';
import './chunks/bundle-lSKfBDuq.js';
import './OpenChannel/components/FrozenChannelNotification.js';
import './OpenChannel/components/OpenChannelHeader.js';
import './chunks/bundle-Tep20T57.js';
import './ui/ImageRenderer.js';
import './chunks/bundle-8VA5hO1c.js';
import './chunks/bundle-2AUp3oeN.js';
import './chunks/bundle-Mn36ivpf.js';
import './ui/PlaceHolder.js';
import './ui/Loader.js';
import './OpenChannel/components/OpenChannelMessageList.js';
import './chunks/bundle-6uVd8Nrl.js';
import './chunks/bundle-pmVgESW3.js';
import './OpenChannel/components/OpenChannelMessage.js';
import './ui/OpenchannelUserMessage.js';
import './ui/ContextMenu.js';
import 'react-dom';
import './ui/SortByRow.js';
import './ui/UserProfile.js';
import './chunks/bundle-3WQuaADd.js';
import './sendbirdSelectors.js';
import './chunks/bundle-7x4clnC7.js';
import './chunks/bundle-PwOQ689V.js';
import './chunks/bundle-OiOp4RUP.js';
import './chunks/bundle-cJc3JBZb.js';
import './ui/OpenChannelAdminMessage.js';
import './ui/OpenchannelOGMessage.js';
import './ui/LinkLabel.js';
import './chunks/bundle-GiSLT4lG.js';
import './Message/context.js';
import './ui/MentionLabel.js';
import './ui/OpenchannelThumbnailMessage.js';
import './ui/OpenchannelFileMessage.js';
import './ui/TextButton.js';
import './chunks/bundle-LhtrqZSE.js';
import './ui/DateSeparator.js';
import './chunks/bundle-LTnLzJFb.js';
import './hooks/useModal.js';
import './chunks/bundle-5JvP07dI.js';
import './chunks/bundle-Sk3SXXP7.js';
import './chunks/bundle-JSlDfYOF.js';
import './chunks/bundle-Nv1SlZSC.js';
import './chunks/bundle-EPtYsHAJ.js';
import '@sendbird/chat';
import '@sendbird/chat/openChannel';

var OpenChannel = function (props) {
    return (React__default.createElement(OpenChannelProvider, { channelUrl: props === null || props === void 0 ? void 0 : props.channelUrl, isMessageGroupingEnabled: props === null || props === void 0 ? void 0 : props.isMessageGroupingEnabled, queries: props === null || props === void 0 ? void 0 : props.queries, messageLimit: props === null || props === void 0 ? void 0 : props.messageLimit, onBeforeSendUserMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendUserMessage, onBeforeSendFileMessage: props === null || props === void 0 ? void 0 : props.onBeforeSendFileMessage, onChatHeaderActionClick: props === null || props === void 0 ? void 0 : props.onChatHeaderActionClick, disableUserProfile: props === null || props === void 0 ? void 0 : props.disableUserProfile, renderUserProfile: props === null || props === void 0 ? void 0 : props.renderUserProfile, onBackClick: props === null || props === void 0 ? void 0 : props.onBackClick },
        React__default.createElement(OpenChannelUI, { renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage, renderHeader: props === null || props === void 0 ? void 0 : props.renderHeader, renderInput: props === null || props === void 0 ? void 0 : props.renderInput, renderPlaceHolderEmptyList: props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList, renderPlaceHolderError: props === null || props === void 0 ? void 0 : props.renderPlaceHolderError, renderPlaceHolderLoading: props === null || props === void 0 ? void 0 : props.renderPlaceHolderLoading })));
};

export { OpenChannel as default };
//# sourceMappingURL=OpenChannel.js.map
