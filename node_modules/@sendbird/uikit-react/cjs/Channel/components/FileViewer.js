'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var reactDom = require('react-dom');
var ui_Avatar = require('../../chunks/bundle-vSdu8rrq.js');
var ui_Label = require('../../chunks/bundle-0MHADZvF.js');
var ui_Icon = require('../../ui/Icon.js');
require('../../hooks/useModal.js');
var index = require('../../chunks/bundle-F--qTOLe.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var Channel_context = require('../../chunks/bundle-7gBYfQwU.js');
var ui_Modal = require('../../chunks/bundle-JragPpHy.js');
require('../../chunks/bundle-QH7iLrPR.js');
require('../../ui/ImageRenderer.js');
require('../../chunks/bundle-NYFm08XH.js');
require('../../chunks/bundle-MeuNh9Q9.js');
require('../../chunks/bundle-v8bBiJ_c.js');
require('../../chunks/bundle-Pe-j2f1D.js');
require('../../chunks/bundle-AQhLE-Ci.js');
require('../../chunks/bundle-ZurhBjw4.js');
require('../../chunks/bundle-cV7uGK08.js');
require('../../chunks/bundle-vWUmeH2R.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../withSendbird.js');
require('../../chunks/bundle-gM8i5lGF.js');
require('../../chunks/bundle-o1ta9AIa.js');
require('../../chunks/bundle-pxBxPT0b.js');
require('../../chunks/bundle-nGMCZjvM.js');
require('@sendbird/chat/message');
require('../../chunks/bundle-GE1I3PNS.js');
require('../../chunks/bundle-ow5FLcVV.js');
require('@sendbird/chat/groupChannel');
require('../hooks/useInitialMessagesFetch.js');
require('../../chunks/bundle-0wbO-LdY.js');
require('../../chunks/bundle-EVdeXpsD.js');
require('../../chunks/bundle-l92Ws-Rs.js');
require('../../chunks/bundle-tFuTz5CT.js');

var FileViewerComponent = function (_a) {
    var 
    // sender
    profileUrl = _a.profileUrl, nickname = _a.nickname, 
    // file
    name = _a.name, type = _a.type, url = _a.url, 
    // others
    isByMe = _a.isByMe, onCancel = _a.onCancel, onDelete = _a.onDelete, disableDelete = _a.disableDelete;
    return (React.createElement("div", { className: "sendbird-fileviewer" },
        React.createElement("div", { className: "sendbird-fileviewer__header" },
            React.createElement("div", { className: "sendbird-fileviewer__header__left" },
                React.createElement("div", { className: "sendbird-fileviewer__header__left__avatar" },
                    React.createElement(ui_Avatar.Avatar, { height: "32px", width: "32px", src: profileUrl })),
                React.createElement(ui_Label.Label, { className: "sendbird-fileviewer__header__left__filename", type: ui_Label.LabelTypography.H_2, color: ui_Label.LabelColors.ONBACKGROUND_1 }, name),
                React.createElement(ui_Label.Label, { className: "sendbird-fileviewer__header__left__sender-name", type: ui_Label.LabelTypography.BODY_1, color: ui_Label.LabelColors.ONBACKGROUND_2 }, nickname)),
            React.createElement("div", { className: "sendbird-fileviewer__header__right" },
                index.isSupportedFileView(type) && (React.createElement("div", { className: "sendbird-fileviewer__header__right__actions" },
                    React.createElement("a", { className: "sendbird-fileviewer__header__right__actions__download", rel: "noopener noreferrer", href: url, target: "_blank" },
                        React.createElement(ui_Icon.default, { type: ui_Icon.IconTypes.DOWNLOAD, fillColor: ui_Icon.IconColors.ON_BACKGROUND_1, height: "24px", width: "24px" })),
                    onDelete && isByMe && (React.createElement("div", { className: "sendbird-fileviewer__header__right__actions__delete" },
                        React.createElement(ui_Icon.default, { className: disableDelete ? 'disabled' : '', type: ui_Icon.IconTypes.DELETE, fillColor: disableDelete ? ui_Icon.IconColors.GRAY : ui_Icon.IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: function () { if (!disableDelete) {
                                onDelete();
                            } } }))))),
                React.createElement("div", { className: "sendbird-fileviewer__header__right__actions__close" },
                    React.createElement(ui_Icon.default, { type: ui_Icon.IconTypes.CLOSE, fillColor: ui_Icon.IconColors.ON_BACKGROUND_1, height: "24px", width: "24px", onClick: onCancel })))),
        React.createElement("div", { className: "sendbird-fileviewer__content" },
            index.isVideo(type) && (React.createElement("video", { controls: true, className: "sendbird-fileviewer__content__video" },
                React.createElement("source", { src: url, type: type }))),
            index.isImage(type) && (React.createElement("img", { src: url, alt: name, className: "sendbird-fileviewer__content__img" })),
            !index.isSupportedFileView(type) && (React.createElement("div", { className: "sendbird-fileviewer__content__unsupported" },
                React.createElement(ui_Label.Label, { type: ui_Label.LabelTypography.H_1, color: ui_Label.LabelColors.ONBACKGROUND_1 }, "Unsupoprted message"))))));
};
var FileViewer = function (_a) {
    var _b, _c, _d;
    var onCancel = _a.onCancel, message = _a.message;
    var deleteMessage = Channel_context.useChannelContext().deleteMessage;
    var sender = message.sender, type = message.type, url = message.url, _e = message.name, name = _e === void 0 ? '' : _e, threadInfo = message.threadInfo;
    var user = (_c = (_b = useSendbirdStateContext.useSendbirdStateContext()) === null || _b === void 0 ? void 0 : _b.config) === null || _c === void 0 ? void 0 : _c.userId;
    var isByMe = user === ((_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.userId);
    var disableDelete = (threadInfo === null || threadInfo === void 0 ? void 0 : threadInfo.replyCount) > 0;
    var profileUrl = sender.profileUrl, _f = sender.nickname, nickname = _f === void 0 ? '' : _f;
    return reactDom.createPortal((React.createElement(FileViewerComponent, { profileUrl: profileUrl, nickname: nickname, type: type, url: url, name: name, onCancel: onCancel, onDelete: function () {
            deleteMessage(message).then(function () {
                onCancel();
            });
        }, isByMe: isByMe, disableDelete: disableDelete })), document.getElementById(ui_Modal.MODAL_ROOT));
};

exports.FileViewerComponent = FileViewerComponent;
exports.default = FileViewer;
//# sourceMappingURL=FileViewer.js.map
