'use strict';

var React = require('react');
var ui_Modal = require('../../chunks/bundle-JragPpHy.js');
require('../../chunks/bundle-QH7iLrPR.js');
require('../../chunks/bundle-0MHADZvF.js');
var ui_Button = require('../../ui/Button.js');
var LocalizationContext = require('../../chunks/bundle-ZurhBjw4.js');
var Channel_context = require('../../chunks/bundle-7gBYfQwU.js');
var stringFormatterUtils = require('../../chunks/bundle-HaufoaVC.js');
require('react-dom');
require('../../chunks/bundle-Pe-j2f1D.js');
require('../../chunks/bundle-vWUmeH2R.js');
require('../../ui/IconButton.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-v8bBiJ_c.js');
require('../../chunks/bundle-cV7uGK08.js');
require('../../chunks/bundle-gM8i5lGF.js');
require('../../useSendbirdStateContext.js');
require('../../withSendbird.js');
require('../../chunks/bundle-o1ta9AIa.js');
require('../../chunks/bundle-pxBxPT0b.js');
require('../../chunks/bundle-nGMCZjvM.js');
require('../../chunks/bundle-F--qTOLe.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-AQhLE-Ci.js');
require('@sendbird/chat/message');
require('../../chunks/bundle-GE1I3PNS.js');
require('../../chunks/bundle-ow5FLcVV.js');
require('@sendbird/chat/groupChannel');
require('../../chunks/bundle-NYFm08XH.js');
require('../hooks/useInitialMessagesFetch.js');
require('../../chunks/bundle-0wbO-LdY.js');
require('../../chunks/bundle-EVdeXpsD.js');
require('../../chunks/bundle-l92Ws-Rs.js');
require('../../chunks/bundle-tFuTz5CT.js');

var RemoveMessage = function (props) {
    var _a;
    var _b = props.onSubmit, onSubmit = _b === void 0 ? function () { } : _b, onCancel = props.onCancel, message = props.message;
    var stringSet = React.useContext(LocalizationContext.LocalizationContext).stringSet;
    var deleteMessage = Channel_context.useChannelContext().deleteMessage;
    return (React.createElement(ui_Modal.Modal, { type: ui_Button.ButtonTypes.DANGER, disabled: ((_a = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) > 0, onCancel: onCancel, onSubmit: function () {
            deleteMessage(message).then(function () {
                // For other status such as PENDING, SCHEDULED, and CANCELED,
                // invalid parameters error is thrown so nothing happens.
                onSubmit();
                onCancel();
            });
        }, submitText: stringSet.MESSAGE_MENU__DELETE, titleText: stringFormatterUtils.getModalDeleteMessageTitle(stringSet, message) }));
};

module.exports = RemoveMessage;
//# sourceMappingURL=RemoveMessageModal.js.map
