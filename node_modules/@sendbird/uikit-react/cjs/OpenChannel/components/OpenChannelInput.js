'use strict';

var React = require('react');
var LocalizationContext = require('../../chunks/bundle-ZurhBjw4.js');
var ui_MessageInput = require('../../ui/MessageInput.js');
var OpenChannel_context = require('../../chunks/bundle-KVlEj9_l.js');
require('../../chunks/bundle-v8bBiJ_c.js');
require('../../chunks/bundle-cV7uGK08.js');
require('../../chunks/bundle-QH7iLrPR.js');
require('../../chunks/bundle-hxGMLtWg.js');
require('../../chunks/bundle-o1ta9AIa.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../chunks/bundle-0MHADZvF.js');
require('../../chunks/bundle-HjwY9t7s.js');
require('dompurify');
require('../../chunks/bundle-N1ipvkhN.js');
require('../../chunks/bundle-i5KLDxjz.js');
require('../../chunks/bundle-xeeBDhY6.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-Pe-j2f1D.js');
require('../../useSendbirdStateContext.js');
require('../../withSendbird.js');
require('../../chunks/bundle-F--qTOLe.js');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-AQhLE-Ci.js');
require('../../chunks/bundle-FpImAp7o.js');
require('../../chunks/bundle-nGMCZjvM.js');
require('../../chunks/bundle-gM8i5lGF.js');
require('../../chunks/bundle-ow5FLcVV.js');
require('../../chunks/bundle-0wbO-LdY.js');
require('@sendbird/chat');
require('@sendbird/chat/openChannel');
require('../../chunks/bundle-NYFm08XH.js');

var OpenChannelInput = React.forwardRef(function (props, ref) {
    var _a = OpenChannel_context.useOpenChannelContext(), currentOpenChannel = _a.currentOpenChannel, disabled = _a.disabled, handleSendMessage = _a.handleSendMessage, handleFileUpload = _a.handleFileUpload, amIMuted = _a.amIMuted;
    var channel = currentOpenChannel;
    var stringSet = React.useContext(LocalizationContext.LocalizationContext).stringSet;
    var value = props.value;
    function getPlaceHolderString() {
        if (amIMuted) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED;
        }
        if (disabled) {
            return stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED;
        }
        return '';
    }
    if (!channel) {
        return null;
    }
    return (React.createElement("div", { className: "sendbird-openchannel-footer" },
        React.createElement(ui_MessageInput, { channel: currentOpenChannel, ref: ref, value: value, disabled: disabled, isVoiceMessageEnabled: false, onSendMessage: handleSendMessage, onFileUpload: handleFileUpload, placeholder: getPlaceHolderString() })));
});

module.exports = OpenChannelInput;
//# sourceMappingURL=OpenChannelInput.js.map
