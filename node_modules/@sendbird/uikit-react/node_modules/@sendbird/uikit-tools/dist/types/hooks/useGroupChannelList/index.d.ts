import type SendbirdChat from '@sendbird/chat';
import type { BaseChannel } from '@sendbird/chat';
import type { GroupChannelCollection } from '@sendbird/chat/groupChannel';
import { GroupChannelModule } from '@sendbird/chat/groupChannel';
import type { ModuleNamespaces } from '@sendbird/chat/lib/__definition';
type UseGroupChannelListOptions = {
    collectionCreator?: () => GroupChannelCollection;
    markAsDelivered?: (channels: BaseChannel[]) => void;
};
type SendbirdChatSDK = SendbirdChat & ModuleNamespaces<[GroupChannelModule]>;
export declare const useGroupChanelList: (sdk: SendbirdChatSDK, options: UseGroupChannelListOptions) => {
    /**
     * Initializing state, only available on first render
     * */
    initialized: boolean;
    /**
     * Get group channels state
     * */
    groupChannels: import("@sendbird/chat/groupChannel").GroupChannel[];
    /**
     * Refresh, clear and reload messages from latest
     * @return {Promise<void>}
     * */
    refresh: () => Promise<void>;
    /**
     * Refreshing state, status is changes when the refresh is called.
     * */
    refreshing: boolean;
    /**
     * Fetch more channels to state
     * @return {Promise<void>}
     * */
    loadMore: () => Promise<void>;
};
export {};
